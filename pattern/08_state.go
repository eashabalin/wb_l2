package pattern

//Состояние — это поведенческий паттерн, позволяющий динамически изменять поведение объекта при смене его состояния.

//Поведения, зависящие от состояния, переезжают в отдельные классы. Первоначальный класс хранит ссылку
//на один из таких объектов-состояний и делегирует ему работу.

// Состояние можно рассматривать как надстройку над Стратегией. Оба паттерна используют композицию,
// чтобы менять поведение основного объекта, делегируя работу вложенным объектам-помощникам.
// Однако в Стратегии эти объекты не знают друг о друге и никак не связаны.
// В Состоянии сами конкретные состояния могут переключать контекст.

type State interface {
	addItem(int) error
	requestItem() error
	insertMoney(money int) error
	dispenseItem() error
}

type VendingMachine struct {
	hasItem       State
	itemRequested State
	hasMoney      State
	noItem        State

	currentState State

	itemCount int
	itemPrice int
}
